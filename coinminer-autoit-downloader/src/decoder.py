#!/usr/bin/env python
# Author: Harli Aquino (c) 2017 Cyren, Inc. | CSP-CERT.ph
import re, sys, logging
LOGGING_LEVEL = logging.DEBUG
logging.basicConfig(level=LOGGING_LEVEL,
                    format='%(asctime)s - %(name)s : %(message)s',
                    datefmt='%Y-%m-%d %H:%M:%S',
                    stream=sys.stdout,
                    )
def decode_callback(match):
    global _cipher1, _cipher2
    decStr=''
    for char in match.group(1):
        decStr+= _cipher1[_cipher2.find(char)]
    return '"%s"'%decStr
def subst(db):
    global _executePtn
    sb=db
    for alias, func in _executePtn.findall(db):
        sb=sb.replace(alias, func)
    return sb
def main():
    global _cipher2, _cipher1, _decoderPtn, _executePtn
    path = sys.argv[1]
    with open(path,'rb') as fh:
        fb=fh.read()
        fh.close()
    try:
        _cipher2, _cipher1, _executeAlias, _decoderFuncName=re.compile(r'\$\w+ = "(.*?)"\s+\$\w+ = "(.*?)"\s+Local \$(\w+) = Execute\s+Local \$\w+ = \$\w+\((\w+)\("').findall(fb)[0]
    except:
        _cipher2, _cipher1, _decoderFuncName=re.compile(r'\@UserName\s+\$\w+ = "(.*?)"\s+\$\w+ = "(.*?)"\s+\w+\(\)\s+Func (\w+)\(').findall(fb)[0]
        _executeAlias=None
    _decoderPtn=re.compile(r'%s\("(.*?)"\)'%_decoderFuncName)
    db=_decoderPtn.sub(decode_callback, fb)
    outpath='%s.decoded.au3_'%path
    with open(outpath, 'wb') as fh:
        fh.write(db)
        fh.close()
    logging.debug('Decoded source saved to %s'%outpath)
    
    if _executeAlias:
        _executePtn=re.compile(r'(\$\w+) = \$%s\("(.*?)"\)'%_executeAlias)
        sb=subst(db)
        outpath='%s.pretty.au3_'%path
        with open(outpath, 'wb') as fh:
            fh.write(sb)
            fh.close()
        logging.debug('Pretty source saved to %s'%outpath)

if __name__ == '__main__':
    main()